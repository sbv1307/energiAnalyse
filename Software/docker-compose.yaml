# Docker-compose file for building the "Energianalyse" program stack.

# Generel note aboout environment settings - see README.md file about .env file

version: '3.8'

services:
  redis-db:
    image: arm32v7/redis
    restart: always
    container_name: redis-db
    networks:
      - front-end
      - back-end
    volumes:
      - redis-data:/data

  postgres-db:
    image: postgres
    restart: always
    container_name: postgres-db
    networks:
      - front-end
      - back-end
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres-db   # DO NOT CHANGE!. Need to med the same as the service name for the postgres image
    volumes:
      - energy-db:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    container_name: postgres-adm
    ports:
      - 8080:8080
    networks:
      - back-end

  mosquitto-mqtt:
    container_name: mosquitto-mqtt
    image: eclipse-mosquitto:2
    restart: always
    command: mosquitto -c /mosquitto-no-auth.conf
    ports:
      - 1883:1883
    volumes:
      - mosquitto-conf:/mosquitto/config
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
    networks:
      - front-end

  energy-webhook:
    container_name: energy-webhook
    image: sbv1307/energy-webhook
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres-db   # DO NOT CHANGE!. Need to med the same as the service name for the postgres image
    links:
      - redis-db
    ports:
      - 8880:80
    depends_on:
      - redis-db
      - energy-worker
      - mosquitto-mqtt
    networks:
      - front-end

  energy-mqtthook:
    container_name: energy-mqtthook
    image: sbv1307/energy-mqtthook
    restart: always
    environment:
      - MAIL_SMTP_HOST=${MAIL_SMTP_HOST}
      - MAIL_SMTP_USERNAME=${MAIL_SMTP_USERNAME}
      - MAIL_SMTP_PASSWORD=${MAIL_SMTP_PASSWORD}
      - MQTT_SERVER=${MQTT_SERVER}
      - MQTT_PORT=${MQTT_PORT}
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID}
      - NOTIFICATION_E_MAIL=${NOTIFICATION_E_MAIL}
      - MQTT_POWERUP_NOTIFICATION=${MQTT_POWERUP_NOTIFICATION}
      - MQTT_DISCONNECT_NOTIFICATION=${MQTT_DISCONNECT_NOTIFICATION}
      - MQTT_RECONNECT_NOTIFICATION=${MQTT_RECONNECT_NOTIFICATION}
    links:
      - redis-db
    depends_on:
      - redis-db
      - energy-worker
      - mosquitto-mqtt
    networks:
      - front-end

  energy-worker:
    container_name: energy-worker
    image: sbv1307/energy-worker 
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres-db   # DO NOT CHANGE!. Need to med the same as the service name for the postgres image
      - GOOGLE_WEBHOOK_URL=${GOOGLE_WEBHOOK_URL}
    links:
      - redis-db
      - postgres-db
    depends_on:
      - redis-db
      - postgres-db
    networks:
      - back-end

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    environment:
      - DATABASE_USER=${POSTGRES_USER}           # Specify the same name as for POSTGRES_USER
      - DATABASE_PASS=${POSTGRES_PASSWORD}       # Specify the same name as for POSTGRES_PASSWORD
      - DATABASE_NAME=${POSTGRES_DB}             # Specify the same name as for POSTGRES_DB
      - DATABASE_HOST=postgres-db  # DO NOT CHANGE!. Need to med the same as the service name for the postgres image
    volumes:
      - energy-grafana-data:/var/lib/grafana
    ports:
      - 3500:3000
    depends_on:
      - postgres-db
    networks:
      - back-end
      

networks:
  front-end:
    name: Fron-end
  back-end:
    name: back-end

volumes:
  redis-data:
    name: redis-data
  energy-grafana-data:
    name: grafana-data
  energy-db:
    name: energy-db
  mosquitto-conf:
    name: mosquitto-conf
  mosquitto-data:
    name: mosquitto-data
  mosquitto-log:
    name: mosquitto-log